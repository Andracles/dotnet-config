{
  "api/index.html": {
    "href": "api/index.html",
    "title": "dotnet-config API | .netconfig",
    "keywords": "dotnet-config API The main usage for .NET tool authors consuming the dotnet-config-lib API is to first build a configuration from a specific path (will assume current directory if omitted): var config = Config.Build(); The resulting configuration will contain the hierarchical variables set in the current directory (or the given path), all its ancestor directories, plus global and system locations. When getting values, the supported primitives are exposed as first-class methods for Add , Get and Set , so you get quite a few usability overloads for each of Boolean , DateTime , Number and String , such as AddBoolean , GetDateTime , GetString or SetNumber : // reads from: // [mytool] // enabled = true bool? enabled = config.GetBoolean(\"mytool\", \"enabled\"); // reads from: // [mytool.editor] // path = code.exe string? path = config.GetString(\"mytool.editor\", \"path\"); // reads from: // [mytool \"src/file.txt\"] // createdOn = 2020-08-23T12:00:00Z DateTime? created = config.GetDateTime(\"mytool\", \"src/file.txt\", \"createdOn\"); // If value was not found, set it to the current datetime if (created == null) // Would create the section if it did not previously exist, and add the variable config.SetDateTime(\"mytool\", \"src/file.txt\", \"createdOn\", DateTime.Now); Alternatively you can use the TryGetXXX methods instead, to avoid checking for null return values in cases where the variable (in the requested section and optional subsection) is not found: if (!config.TryGetDateTime(\"mytool\", \"src/file.txt\", \"createdOn\", out created)) config.SetDateTime(\"mytool\", \"src/file.txt\", \"createdOn\", DateTime.Now); Since .netconfig supports multi-valued variables, you can retrieve them all ConfigEntry and inspect or manipulate them granularly: foreach (ConfigEntry entry in config.GetAll(\"proxy\", \"url\")) { // entry.Level allows inspecting the location where the entry was read from if (entry.Level == ConfigLevel.System) // entry came from Environment.SpecialFolder.System else if (entry.Level == ConfigLevel.Global) // entry came from Environment.SpecialFolder.UserProfile else // local entry from current dir .netconfig or an ancestor directory Console.WriteLine(entry.GetString()); // entry.GetBoolean(), entry.GetDateTime(), entry.GetNumber() } When writing values (via AddXXX or SetXXX ) you can optionally specify the configuration level to use for persisting the value, by passing a ConfigLevel : // writes on the global .netconfig in the user's profile //[vs \"alias\"] // comexp = run|community|exp config.AddString(\"vs\", \"alias\", \"comexp\", \"run|community|exp\", ConfigLevel.Global);"
  },
  "api/Microsoft.DotNet.Config.html": {
    "href": "api/Microsoft.DotNet.Config.html",
    "title": "Class Config | .netconfig",
    "keywords": "Class Config Provides access to .netconfig configuration options. Inheritance System.Object Config Implements System.Collections.Generic.IEnumerable < ConfigEntry > System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Microsoft.DotNet Assembly : cs.temp.dll.dll Syntax public abstract class Config : IEnumerable<ConfigEntry>, IEnumerable Constructors Config(String) Creates the Config and sets FilePath to the given filePath . Declaration protected Config(string filePath) Parameters Type Name Description System.String filePath Fields FileName Default filename, equal to '.netconfig'. Declaration public const string FileName = \".netconfig\" Field Value Type Description System.String Properties FilePath Path to the file that will be used to save values when writing changes to disk. Declaration public string FilePath { get; } Property Value Type Description System.String GlobalLocation Default global location, equal to System.Environment.SpecialFolder.UserProfile plus FileName . Declaration public static string GlobalLocation { get; } Property Value Type Description System.String Level Gets the optional configuration level for this config. null unless the FilePath equals GlobalLocation or SystemLocation . Declaration public ConfigLevel? Level { get; } Property Value Type Description System.Nullable < ConfigLevel > SystemLocation Default system location, equal to System.Environment.SpecialFolder.System plus FileName . Declaration public static string SystemLocation { get; } Property Value Type Description System.String Methods AddBoolean(String, String, String, Boolean) Adds a value to a multi-valued variable in the given section and optional subsection. Declaration public abstract void AddBoolean(string section, string subsection, string variable, bool value) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Boolean value Value add to the variable. AddDateTime(String, String, String, DateTime) Adds a value to a multi-valued variable in the given section and optional subsection. Declaration public abstract void AddDateTime(string section, string subsection, string variable, DateTime value) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.DateTime value Value add to the variable. AddNumber(String, String, String, Int64) Adds a value to a multi-valued variable in the given section and optional subsection. Declaration public abstract void AddNumber(string section, string subsection, string variable, long value) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Int64 value Value add to the variable. AddString(String, String, String, String) Adds a value to a multi-valued variable in the given section and optional subsection. Declaration public abstract void AddString(string section, string subsection, string variable, string value) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.String value Value add to the variable. Build(ConfigLevel) Access the configuration from a specific store. Declaration public static Config Build(ConfigLevel store) Parameters Type Name Description ConfigLevel store Returns Type Description Config Build(String) Builds configuration from the given path, which can be a directory or a file path. If ommited, the will be used. Declaration public static Config Build(string path = null) Parameters Type Name Description System.String path Returns Type Description Config Remarks The returned configuration will contain the aggregate hierarchical configuration from the given directory (or file) and any ancestor directories, plus Global and System locations. GetAll(String, String, String, ValueMatcher) Gets all values from a multi-valued variable from the given section and optional subsection, which optionally match the given value regular expression. Declaration public abstract IEnumerable<ConfigEntry> GetAll(string section, string subsection, string variable, ValueMatcher valueMatcher) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to remove. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . Returns Type Description System.Collections.Generic.IEnumerable < ConfigEntry > GetEntries() Gets the configuration entries in the current configuration. Declaration protected abstract IEnumerable<ConfigEntry> GetEntries() Returns Type Description System.Collections.Generic.IEnumerable < ConfigEntry > GetRegex(String, String) Gets all values where the key (section plus subsection and variable name) match the nameRegex and optionally also the valueRegex . Declaration public abstract IEnumerable<ConfigEntry> GetRegex(string nameRegex, string valueRegex = null) Parameters Type Name Description System.String nameRegex Regular expression to match against the key (section plus subsection and variable name). System.String valueRegex Optional regular expression to match against the variable values. Returns Type Description System.Collections.Generic.IEnumerable < ConfigEntry > RemoveSection(String, String) Remove the given section from the configuration file. Declaration public abstract void RemoveSection(string section, string subsection = null) Parameters Type Name Description System.String section The section to remove. System.String subsection Optional subsection to remove. RenameSection(String, String, String, String) Renames a section and optional subsection. Declaration public abstract void RenameSection(string oldSection, string oldSubsection, string newSection, string newSubsection) Parameters Type Name Description System.String oldSection The old section name to rename. System.String oldSubsection The optional old subsection to rename. System.String newSection The new section name to use. System.String newSubsection The optional new subsection to use. SetAllBoolean(String, String, String, Boolean, ValueMatcher) Sets the value of all matching variables in the given section and optional subsection. Declaration public abstract void SetAllBoolean(string section, string subsection, string variable, bool value, ValueMatcher valueMatcher) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetAllDateTime(String, String, String, DateTime, ValueMatcher) Sets the value of all matching variables in the given section and optional subsection. Declaration public abstract void SetAllDateTime(string section, string subsection, string variable, DateTime value, ValueMatcher valueMatcher) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetAllNumber(String, String, String, Int64, ValueMatcher) Sets the value of all matching variables in the given section and optional subsection. Declaration public abstract void SetAllNumber(string section, string subsection, string variable, long value, ValueMatcher valueMatcher) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetAllString(String, String, String, String, ValueMatcher) Sets the value of all matching variables in the given section and optional subsection. Declaration public abstract void SetAllString(string section, string subsection, string variable, string value, ValueMatcher valueMatcher) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.String value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetBoolean(String, String, String, Boolean, ValueMatcher) Sets the value of a variable in the given section and optional subsection. Declaration public abstract void SetBoolean(string section, string subsection, string variable, bool value, ValueMatcher valueMatcher) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetDateTime(String, String, String, DateTime, ValueMatcher) Sets the value of a variable in the given section and optional subsection. Declaration public abstract void SetDateTime(string section, string subsection, string variable, DateTime value, ValueMatcher valueMatcher) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetNumber(String, String, String, Int64, ValueMatcher) Sets the value of a variable in the given section and optional subsection. Declaration public abstract void SetNumber(string section, string subsection, string variable, long value, ValueMatcher valueMatcher) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetString(String, String, String, String, ValueMatcher) Sets the value of a variable in the given section and optional subsection. Declaration public abstract void SetString(string section, string subsection, string variable, string value, ValueMatcher valueMatcher) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.String value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . TryGetBoolean(String, String, String, out Boolean) Tries to retrieve a variable value from configuration. Declaration public abstract bool TryGetBoolean(string section, string subsection, string variable, out bool value) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to retrieve. System.Boolean value The variable value if found. Returns Type Description System.Boolean true if the value was found, false otherwise. TryGetDateTime(String, String, String, out DateTime) Tries to retrieve a variable value from configuration. Declaration public abstract bool TryGetDateTime(string section, string subsection, string variable, out DateTime value) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to retrieve. System.DateTime value The variable value if found. Returns Type Description System.Boolean true if the value was found, false otherwise. TryGetNumber(String, String, String, out Int64) Tries to retrieve a variable value from configuration. Declaration public abstract bool TryGetNumber(string section, string subsection, string variable, out long value) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to retrieve. System.Int64 value The variable value if found. Returns Type Description System.Boolean true if the value was found, false otherwise. TryGetString(String, String, String, out String) Tries to retrieve a variable value from configuration. Declaration public abstract bool TryGetString(string section, string subsection, string variable, out string value) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to retrieve. System.String value The variable value if found. Returns Type Description System.Boolean true if the value was found, false otherwise. Unset(String, String, String) Removes a variable from the given section and optional subsection. Declaration public abstract void Unset(string section, string subsection, string variable) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to remove. UnsetAll(String, String, String, ValueMatcher) Removes all values from a multi-valued variable from the given section and optional subsection. Declaration public abstract void UnsetAll(string section, string subsection, string variable, ValueMatcher valueMatcher) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to remove. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . Explicit Interface Implementations IEnumerable<ConfigEntry>.GetEnumerator() Declaration IEnumerator<ConfigEntry> IEnumerable<ConfigEntry>.GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < ConfigEntry > Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Microsoft.DotNet.ConfigEntry.html": {
    "href": "api/Microsoft.DotNet.ConfigEntry.html",
    "title": "Class ConfigEntry | .netconfig",
    "keywords": "Class ConfigEntry Represents a configuration option. Inheritance System.Object ConfigEntry Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Microsoft.DotNet Assembly : cs.temp.dll.dll Syntax public class ConfigEntry Constructors ConfigEntry(String, String, String, String, Nullable<ConfigLevel>) Initializes a new instance of the ConfigEntry class with a given key, value and store level. Declaration public ConfigEntry(string section, string subsection, string name, string value, ConfigLevel? level) Parameters Type Name Description System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String name The variable name. System.String value The variable value. System.Nullable < ConfigLevel > level The origin store. Properties Comment Gets or sets the optional comment. Declaration public string Comment { get; set; } Property Value Type Description System.String Key Gets the key for the entry. Declaration public string Key { get; } Property Value Type Description System.String Level Gets the origin store. null if not either Global or System . Declaration public ConfigLevel? Level { get; } Property Value Type Description System.Nullable < ConfigLevel > RawValue Gets the variable raw value. Declaration public string RawValue { get; } Property Value Type Description System.String Section Gets the section containing the entry. Declaration public string Section { get; } Property Value Type Description System.String Subsection Gets the optional subsection containing the entry. Declaration public string Subsection { get; } Property Value Type Description System.String Variable Gets the variable name. Declaration public string Variable { get; } Property Value Type Description System.String Methods GetBoolean() Gets the typed System.Boolean value for the entry. Declaration public bool GetBoolean() Returns Type Description System.Boolean The System.Boolean corresponding to the RawValue . Exceptions Type Condition System.FormatException The RawValue cannot be converted to System.Boolean . GetDateTime() Gets the typed System.DateTime value for the entry. Declaration public DateTime GetDateTime() Returns Type Description System.DateTime The System.DateTime corresponding to the RawValue . Exceptions Type Condition System.FormatException The RawValue cannot be converted to System.DateTime . GetNumber() Gets the typed System.Int64 value for the entry. Declaration public long GetNumber() Returns Type Description System.Int64 The System.Int64 corresponding to the RawValue . Exceptions Type Condition System.FormatException The RawValue cannot be converted to System.Int64 . GetString() Gets the System.String value for the entry. Declaration public string GetString() Returns Type Description System.String The System.String from the RawValue . Exceptions Type Condition System.FormatException The RawValue cannot be converted to System.String , because it does not have a value."
  },
  "api/Microsoft.DotNet.ConfigExtensions.html": {
    "href": "api/Microsoft.DotNet.ConfigExtensions.html",
    "title": "Class ConfigExtensions | .netconfig",
    "keywords": "Class ConfigExtensions Usability overloads for Config . Inheritance System.Object ConfigExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Microsoft.DotNet Assembly : cs.temp.dll.dll Syntax public static class ConfigExtensions Methods AddBoolean(Config, String, String, Boolean) Adds a value to a multi-valued variable in the given section. Declaration public static void AddBoolean(this Config config, string section, string variable, bool value) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String variable The variable to assign. System.Boolean value Value add to the variable. AddBoolean(Config, String, String, Boolean, ConfigLevel) Adds a value to a multi-valued variable in the given section. Declaration public static void AddBoolean(this Config config, string section, string variable, bool value, ConfigLevel level) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String variable The variable to assign. System.Boolean value Value add to the variable. ConfigLevel level The level to add the value too. AddBoolean(Config, String, String, String, Boolean, ConfigLevel) Adds a value to a multi-valued variable in the given section. Declaration public static void AddBoolean(this Config config, string section, string subsection, string variable, bool value, ConfigLevel level) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String subsection The subsection containing the variable. System.String variable The variable to assign. System.Boolean value Value add to the variable. ConfigLevel level The level to add the value too. AddDateTime(Config, String, String, DateTime) Adds a value to a multi-valued variable in the given section. Declaration public static void AddDateTime(this Config config, string section, string variable, DateTime value) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String variable The variable to assign. System.DateTime value Value add to the variable. AddDateTime(Config, String, String, DateTime, ConfigLevel) Adds a value to a multi-valued variable in the given section. Declaration public static void AddDateTime(this Config config, string section, string variable, DateTime value, ConfigLevel level) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String variable The variable to assign. System.DateTime value Value add to the variable. ConfigLevel level The level to add the value too. AddDateTime(Config, String, String, String, DateTime, ConfigLevel) Adds a value to a multi-valued variable in the given section. Declaration public static void AddDateTime(this Config config, string section, string subsection, string variable, DateTime value, ConfigLevel level) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String subsection The subsection containing the variable. System.String variable The variable to assign. System.DateTime value Value add to the variable. ConfigLevel level The level to add the value too. AddNumber(Config, String, String, Int64) Adds a value to a multi-valued variable in the given section. Declaration public static void AddNumber(this Config config, string section, string variable, long value) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String variable The variable to assign. System.Int64 value Value add to the variable. AddNumber(Config, String, String, Int64, ConfigLevel) Adds a value to a multi-valued variable in the given section. Declaration public static void AddNumber(this Config config, string section, string variable, long value, ConfigLevel level) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String variable The variable to assign. System.Int64 value Value add to the variable. ConfigLevel level The level to add the value too. AddNumber(Config, String, String, String, Int64, ConfigLevel) Adds a value to a multi-valued variable in the given section. Declaration public static void AddNumber(this Config config, string section, string subsection, string variable, long value, ConfigLevel level) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String subsection The subsection containing the variable. System.String variable The variable to assign. System.Int64 value Value add to the variable. ConfigLevel level The level to add the value too. AddString(Config, String, String, String) Adds a value to a multi-valued variable in the given section. Declaration public static void AddString(this Config config, string section, string variable, string value) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String variable The variable to assign. System.String value Value add to the variable. AddString(Config, String, String, String, ConfigLevel) Adds a value to a multi-valued variable in the given section. Declaration public static void AddString(this Config config, string section, string variable, string value, ConfigLevel level) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String variable The variable to assign. System.String value Value add to the variable. ConfigLevel level The level to add the value too. AddString(Config, String, String, String, String, ConfigLevel) Adds a value to a multi-valued variable in the given section. Declaration public static void AddString(this Config config, string section, string subsection, string variable, string value, ConfigLevel level) Parameters Type Name Description Config config The configuration to add the value to. System.String section The section containing the variable. System.String subsection The optional subsection containing the variable. System.String variable The variable to assign. System.String value Value add to the variable. ConfigLevel level The level to add the value too. GetAll(Config, String, String) Gets all values from a multi-valued variable from the given section. Declaration public static IEnumerable<ConfigEntry> GetAll(this Config config, string section, string variable) Parameters Type Name Description Config config The configuration to get the values from. System.String section The section containing the variable. System.String variable The variable to remove. Returns Type Description System.Collections.Generic.IEnumerable < ConfigEntry > GetAll(Config, String, String, ValueMatcher) Gets all values from a multi-valued variable from the given section and optional subsection, which optionally match the given value regular expression. Declaration public static IEnumerable<ConfigEntry> GetAll(this Config config, string section, string variable, ValueMatcher valueMatcher) Parameters Type Name Description Config config The configuration to get the values from. System.String section The section containing the variable. System.String variable The variable to remove. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . Returns Type Description System.Collections.Generic.IEnumerable < ConfigEntry > GetAll(Config, String, String, String) Gets all values from a multi-valued variable from the given section and optional subsection, which optionally match the given value regular expression. Declaration public static IEnumerable<ConfigEntry> GetAll(this Config config, string section, string subsection, string variable) Parameters Type Name Description Config config The configuration to get the values from. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to remove. Returns Type Description System.Collections.Generic.IEnumerable < ConfigEntry > GetBoolean(Config, String, String) Retrieves a variable value from configuration. Declaration public static bool? GetBoolean(this Config config, string section, string variable) Parameters Type Name Description Config config The configuration to get the value from. System.String section The section containing the variable. System.String variable The variable to retrieve. Returns Type Description System.Nullable < System.Boolean > The value or null if not found. GetBoolean(Config, String, String, String) Retrieves a variable value from configuration. Declaration public static bool? GetBoolean(this Config config, string section, string subsection, string variable) Parameters Type Name Description Config config The configuration to get the value from. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to retrieve. Returns Type Description System.Nullable < System.Boolean > The value or null if not found. GetDateTime(Config, String, String) Retrieves a variable value from configuration. Declaration public static DateTime? GetDateTime(this Config config, string section, string variable) Parameters Type Name Description Config config The configuration to get the value from. System.String section The section containing the variable. System.String variable The variable to retrieve. Returns Type Description System.Nullable < System.DateTime > The value or null if not found. GetDateTime(Config, String, String, String) Retrieves a variable value from configuration. Declaration public static DateTime? GetDateTime(this Config config, string section, string subsection, string variable) Parameters Type Name Description Config config The configuration to get the value from. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to retrieve. Returns Type Description System.Nullable < System.DateTime > The value or null if not found. GetNumber(Config, String, String) Retrieves a variable value from configuration. Declaration public static long? GetNumber(this Config config, string section, string variable) Parameters Type Name Description Config config The configuration to get the value from. System.String section The section containing the variable. System.String variable The variable to retrieve. Returns Type Description System.Nullable < System.Int64 > The value or null if not found. GetNumber(Config, String, String, String) Retrieves a variable value from configuration. Declaration public static long? GetNumber(this Config config, string section, string subsection, string variable) Parameters Type Name Description Config config The configuration to get the value from. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to retrieve. Returns Type Description System.Nullable < System.Int64 > The value or null if not found. GetString(Config, String, String) Retrieves a variable value from configuration. Declaration public static string GetString(this Config config, string section, string variable) Parameters Type Name Description Config config The configuration to get the value from. System.String section The section containing the variable. System.String variable The variable to retrieve. Returns Type Description System.String The value or null if not found. GetString(Config, String, String, String) Retrieves a variable value from configuration. Declaration public static string GetString(this Config config, string section, string subsection, string variable) Parameters Type Name Description Config config The configuration to get the value from. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to retrieve. Returns Type Description System.String The value or null if not found. RemoveSection(Config, String) Remove the given section from the configuration file. Declaration public static void RemoveSection(this Config config, string section) Parameters Type Name Description Config config The configuration to operate on. System.String section The section to remove. RenameSection(Config, String, String) Renames a section. Declaration public static void RenameSection(this Config config, string oldSection, string newSection) Parameters Type Name Description Config config The configuration to operate on. System.String oldSection The old section name to rename. System.String newSection The new section name to use. SetAllBoolean(Config, String, String, Boolean) Sets the value of all matching variables in the given section. Declaration public static void SetAllBoolean(this Config config, string section, string variable, bool value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the matching variables. SetAllBoolean(Config, String, String, Boolean, ConfigLevel) Sets the value of all matching variables in the given section. Declaration public static void SetAllBoolean(this Config config, string section, string variable, bool value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the matching variables. ConfigLevel level The level to add the value too. SetAllBoolean(Config, String, String, Boolean, ValueMatcher) Sets the value of all matching variables in the given section. Declaration public static void SetAllBoolean(this Config config, string section, string variable, bool value, ValueMatcher valueMatcher) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetAllBoolean(Config, String, String, Boolean, ValueMatcher, ConfigLevel) Sets the value of all matching variables in the given section. Declaration public static void SetAllBoolean(this Config config, string section, string variable, bool value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetAllBoolean(Config, String, String, String, Boolean, ValueMatcher, ConfigLevel) Sets the value of all matching variables in the given section and optional subsection. Declaration public static void SetAllBoolean(this Config config, string section, string subsection, string variable, bool value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetAllDateTime(Config, String, String, DateTime) Sets the value of all matching variables in the given section. Declaration public static void SetAllDateTime(this Config config, string section, string variable, DateTime value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the matching variables. SetAllDateTime(Config, String, String, DateTime, ConfigLevel) Sets the value of all matching variables in the given section. Declaration public static void SetAllDateTime(this Config config, string section, string variable, DateTime value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the matching variables. ConfigLevel level The level to add the value too. SetAllDateTime(Config, String, String, DateTime, ValueMatcher) Sets the value of all matching variables in the given section. Declaration public static void SetAllDateTime(this Config config, string section, string variable, DateTime value, ValueMatcher valueMatcher) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetAllDateTime(Config, String, String, DateTime, ValueMatcher, ConfigLevel) Sets the value of all matching variables in the given section. Declaration public static void SetAllDateTime(this Config config, string section, string variable, DateTime value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetAllDateTime(Config, String, String, String, DateTime, ValueMatcher, ConfigLevel) Sets the value of all matching variables in the given section and optional subsection. Declaration public static void SetAllDateTime(this Config config, string section, string subsection, string variable, DateTime value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetAllNumber(Config, String, String, Int64) Sets the value of all matching variables in the given section. Declaration public static void SetAllNumber(this Config config, string section, string variable, long value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the matching variables. SetAllNumber(Config, String, String, Int64, ConfigLevel) Sets the value of all matching variables in the given section. Declaration public static void SetAllNumber(this Config config, string section, string variable, long value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the matching variables. ConfigLevel level The level to add the value too. SetAllNumber(Config, String, String, Int64, ValueMatcher) Sets the value of all matching variables in the given section. Declaration public static void SetAllNumber(this Config config, string section, string variable, long value, ValueMatcher valueMatcher) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetAllNumber(Config, String, String, Int64, ValueMatcher, ConfigLevel) Sets the value of all matching variables in the given section. Declaration public static void SetAllNumber(this Config config, string section, string variable, long value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetAllNumber(Config, String, String, String, Int64, ValueMatcher, ConfigLevel) Sets the value of all matching variables in the given section and optional subsection. Declaration public static void SetAllNumber(this Config config, string section, string subsection, string variable, long value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetAllString(Config, String, String, String) Sets the value of all matching variables in the given section. Declaration public static void SetAllString(this Config config, string section, string variable, string value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.String value Value to assign to the matching variables. SetAllString(Config, String, String, String, ConfigLevel) Sets the value of all matching variables in the given section. Declaration public static void SetAllString(this Config config, string section, string variable, string value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.String value Value to assign to the matching variables. ConfigLevel level The level to add the value too. SetAllString(Config, String, String, String, ValueMatcher) Sets the value of all matching variables in the given section. Declaration public static void SetAllString(this Config config, string section, string variable, string value, ValueMatcher valueMatcher) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.String value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetAllString(Config, String, String, String, ValueMatcher, ConfigLevel) Sets the value of all matching variables in the given section. Declaration public static void SetAllString(this Config config, string section, string variable, string value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.String value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetAllString(Config, String, String, String, String, ValueMatcher, ConfigLevel) Sets the value of all matching variables in the given section and optional subsection. Declaration public static void SetAllString(this Config config, string section, string subsection, string variable, string value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.String value Value to assign to the matching variables. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetBoolean(Config, String, String, Boolean) Sets the value of a variable in the given section. Declaration public static void SetBoolean(this Config config, string section, string variable, bool value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the variable. SetBoolean(Config, String, String, Boolean, ConfigLevel) Sets the value of a variable in the given section. Declaration public static void SetBoolean(this Config config, string section, string variable, bool value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the variable. ConfigLevel level The level to add the value too. SetBoolean(Config, String, String, Boolean, ValueMatcher) Sets the value of a variable in the given section. Declaration public static void SetBoolean(this Config config, string section, string variable, bool value, ValueMatcher valueMatcher) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetBoolean(Config, String, String, Boolean, ValueMatcher, ConfigLevel) Sets the value of a variable in the given section. Declaration public static void SetBoolean(this Config config, string section, string variable, bool value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetBoolean(Config, String, String, String, Boolean) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetBoolean(this Config config, string section, string subsection, string variable, bool value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the variable. SetBoolean(Config, String, String, String, Boolean, ConfigLevel) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetBoolean(this Config config, string section, string subsection, string variable, bool value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the variable. ConfigLevel level The level to add the value too. SetBoolean(Config, String, String, String, Boolean, ValueMatcher, ConfigLevel) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetBoolean(this Config config, string section, string subsection, string variable, bool value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Boolean value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetDateTime(Config, String, String, DateTime) Sets the value of a variable in the given section. Declaration public static void SetDateTime(this Config config, string section, string variable, DateTime value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the variable. SetDateTime(Config, String, String, DateTime, ConfigLevel) Sets the value of a variable in the given section. Declaration public static void SetDateTime(this Config config, string section, string variable, DateTime value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the variable. ConfigLevel level The level to add the value too. SetDateTime(Config, String, String, DateTime, ValueMatcher) Sets the value of a variable in the given section. Declaration public static void SetDateTime(this Config config, string section, string variable, DateTime value, ValueMatcher valueMatcher) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetDateTime(Config, String, String, DateTime, ValueMatcher, ConfigLevel) Sets the value of a variable in the given section. Declaration public static void SetDateTime(this Config config, string section, string variable, DateTime value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetDateTime(Config, String, String, String, DateTime) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetDateTime(this Config config, string section, string subsection, string variable, DateTime value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the variable. SetDateTime(Config, String, String, String, DateTime, ConfigLevel) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetDateTime(this Config config, string section, string subsection, string variable, DateTime value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the variable. ConfigLevel level The level to add the value too. SetDateTime(Config, String, String, String, DateTime, ValueMatcher, ConfigLevel) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetDateTime(this Config config, string section, string subsection, string variable, DateTime value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.DateTime value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetNumber(Config, String, String, Int64) Sets the value of a variable in the given section. Declaration public static void SetNumber(this Config config, string section, string variable, long value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the variable. SetNumber(Config, String, String, Int64, ConfigLevel) Sets the value of a variable in the given section. Declaration public static void SetNumber(this Config config, string section, string variable, long value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the variable. ConfigLevel level The level to add the value too. SetNumber(Config, String, String, Int64, ValueMatcher) Sets the value of a variable in the given section. Declaration public static void SetNumber(this Config config, string section, string variable, long value, ValueMatcher valueMatcher) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the variable. ValueMatcher valueMatcher Filter entries to those where the value is matched by Matches(String) . SetNumber(Config, String, String, Int64, ValueMatcher, ConfigLevel) Sets the value of a variable in the given section. Declaration public static void SetNumber(this Config config, string section, string variable, long value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the variable. ValueMatcher valueMatcher Filter entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetNumber(Config, String, String, String, Int64) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetNumber(this Config config, string section, string subsection, string variable, long value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the variable. SetNumber(Config, String, String, String, Int64, ConfigLevel) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetNumber(this Config config, string section, string subsection, string variable, long value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the variable. ConfigLevel level The level to add the value too. SetNumber(Config, String, String, String, Int64, ValueMatcher, ConfigLevel) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetNumber(this Config config, string section, string subsection, string variable, long value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.Int64 value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetString(Config, String, String, String) Sets the value of a variable in the given section. Declaration public static void SetString(this Config config, string section, string variable, string value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.String value Value to assign to the variable. SetString(Config, String, String, String, ConfigLevel) Sets the value of a variable in the given section. Declaration public static void SetString(this Config config, string section, string variable, string value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.String value Value to assign to the variable. ConfigLevel level The level to add the value too. SetString(Config, String, String, String, ValueMatcher) Sets the value of a variable in the given section. Declaration public static void SetString(this Config config, string section, string variable, string value, ValueMatcher valueMatcher) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.String value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . SetString(Config, String, String, String, ValueMatcher, ConfigLevel) Sets the value of a variable in the given section. Declaration public static void SetString(this Config config, string section, string variable, string value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to assign. System.String value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. SetString(Config, String, String, String, String) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetString(this Config config, string section, string subsection, string variable, string value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.String value Value to assign to the variable. SetString(Config, String, String, String, String, ConfigLevel) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetString(this Config config, string section, string subsection, string variable, string value, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.String value Value to assign to the variable. ConfigLevel level The level to add the value too. SetString(Config, String, String, String, String, ValueMatcher, ConfigLevel) Sets the value of a variable in the given section and optional subsection. Declaration public static void SetString(this Config config, string section, string subsection, string variable, string value, ValueMatcher valueMatcher, ConfigLevel level) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String subsection Optional subsection containing the variable. System.String variable The variable to assign. System.String value Value to assign to the variable. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) . ConfigLevel level The level to add the value too. TryGetBoolean(Config, String, String, out Boolean) Tries to retrieve a variable value from configuration. Declaration public static bool TryGetBoolean(this Config config, string section, string variable, out bool value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to retrieve. System.Boolean value The variable value if found. Returns Type Description System.Boolean true if the value was found, false otherwise. TryGetDateTime(Config, String, String, out DateTime) Tries to retrieve a variable value from configuration. Declaration public static bool TryGetDateTime(this Config config, string section, string variable, out DateTime value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to retrieve. System.DateTime value The variable value if found. Returns Type Description System.Boolean true if the value was found, false otherwise. TryGetNumber(Config, String, String, out Int64) Tries to retrieve a variable value from configuration. Declaration public static bool TryGetNumber(this Config config, string section, string variable, out long value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to retrieve. System.Int64 value The variable value if found. Returns Type Description System.Boolean true if the value was found, false otherwise. TryGetString(Config, String, String, out String) Tries to retrieve a variable value from configuration. Declaration public static bool TryGetString(this Config config, string section, string variable, out string value) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to retrieve. System.String value The variable value if found. Returns Type Description System.Boolean true if the value was found, false otherwise. Unset(Config, String, String) Removes a variable from the given section. Declaration public static void Unset(this Config config, string section, string variable) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to remove. UnsetAll(Config, String, String) Removes all values from a multi-valued variable from the given section. Declaration public static void UnsetAll(this Config config, string section, string variable) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to remove. UnsetAll(Config, String, String, ValueMatcher) Removes all values from a multi-valued variable from the given section. Declaration public static void UnsetAll(this Config config, string section, string variable, ValueMatcher valueMatcher) Parameters Type Name Description Config config The configuration to operate on. System.String section The section containing the variable. System.String variable The variable to remove. ValueMatcher valueMatcher Filter returned entries to those where the value is matched by Matches(String) ."
  },
  "api/Microsoft.DotNet.ConfigLevel.html": {
    "href": "api/Microsoft.DotNet.ConfigLevel.html",
    "title": "Enum ConfigLevel | .netconfig",
    "keywords": "Enum ConfigLevel Specifies the level of configuration to use. Namespace : Microsoft.DotNet Assembly : cs.temp.dll.dll Syntax public enum ConfigLevel Fields Name Description Global The global ~/.netconfig for the current user, from the System.Environment.SpecialFolder.UserProfile location. System The system wide .netconfig, from the System.Environment.SpecialFolder.System location."
  },
  "api/Microsoft.DotNet.html": {
    "href": "api/Microsoft.DotNet.html",
    "title": "Namespace Microsoft.DotNet | .netconfig",
    "keywords": "Namespace Microsoft.DotNet Classes Config Provides access to .netconfig configuration options. ConfigEntry Represents a configuration option. ConfigExtensions Usability overloads for Config . ValueMatcher Allows matching values by using a regular expression. Enums ConfigLevel Specifies the level of configuration to use."
  },
  "api/Microsoft.DotNet.ValueMatcher.html": {
    "href": "api/Microsoft.DotNet.ValueMatcher.html",
    "title": "Class ValueMatcher | .netconfig",
    "keywords": "Class ValueMatcher Allows matching values by using a regular expression. Inheritance System.Object ValueMatcher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Microsoft.DotNet Assembly : cs.temp.dll.dll Syntax public class ValueMatcher Properties All A ValueMatcher that always matches regardless of the specified value. Declaration public static ValueMatcher All { get; } Property Value Type Description ValueMatcher Methods From(String) An optional regular expression to use Declaration public static ValueMatcher From(string expression) Parameters Type Name Description System.String expression Regular expression, optionally starting with ! to negate the match expression. Returns Type Description ValueMatcher Matches(String) Checks whether the given value matches the expression specified for the ValueMatcher when constructed. Declaration public bool Matches(string value) Parameters Type Name Description System.String value Returns Type Description System.Boolean true if the value is not null and matches the expression."
  },
  "index.html": {
    "href": "index.html",
    "title": "dotnet-config | .netconfig",
    "keywords": "dotnet-config Why | What | How | Format | API | CLI Why dotnet-config (or .netconfig ) provides a uniform mechanism for .NET Core tools to store and read configuration values in a predictable format which can be manipulated through a command line tool, an API and also manually in any text editor by the user. Just like git config provides a uniform way of storing settings for all git commands, the goal of dotnet-config is to foster the same level of consistency across all .NET tools. The format is (mostly) compatible with it too and therefore leverages the learnings of the git community around configuration for arbitrary tools. What dotnet-config provides the following: A well-documented file format than can be hand-edited in any text editor. A dotnet global tool to manage the configuration files (much like git config ). An API for dotnet tool authors to read/write settings. By default, configuration files are named .netconfig and support three storage levels: Local: current directory and any ancestor directories Global: user profile directory, from System.Environment.SpecialFolder.UserProfile . System: system-wide directory, from System.Environment.SpecialFolder.System . The files are read in the order given above, with first value found taking precedence. When multiple values are read then all values of a key from all files will be returned. How Format Example file: # .netconfig is awesome: https://dotnetconfig.org [vs \"alias\"] comexp = run|community|exp preexp = run|preview|exp [file.github] # example of multi-valued variables url = https://github.com/dotnet/runtime/tree/master/docs/design/features url = https://github.com/dotnet/aspnetcore/tree/master/docs ; subsections allow grouping variables [file \"docs/design/features/code-versioning.md\"] url = https://github.com/dotnet/runtime/blob/master/docs/design/features/code-versioning.md etag = 7405567... [file \"docs/APIReviewProcess.md\"] url = https://github.com/dotnet/aspnetcore/blob/master/docs/APIReviewProcess.md etag = 1e4acd7... The syntax follows closely the git-config syntax . The # and ; characters begin comments to the end of line, blank lines are ignored. The file consists of sections and variables . A section begins with the name of the section in square brackets and continues until the next section begins. Section names are case-insensitive. Only alphanumeric characters, - and . are allowed in section names. Each variable must belong to some section, which means that there must be a section header before the first setting of a variable. Sections can be further divided into subsections . To begin a subsection put its name in double quotes, separated by space from the section name, in the section header, like in the example below: [section \"subsection\"] Subsection names are case sensitive and can contain any characters except newline. Doublequote \" and backslash \\ can be included by escaping them as \\\" and \\\\ , respectively. Section headers cannot span multiple lines. Variables may belong directly to a section or to a given subsection. You can have [section] if you have [section \"subsection\"] , but you don't need to. All the other lines are recognized as setting variables , in the form name = value (or just name , which is a short-hand to say that the variable is the boolean true ). Variable names are case-insensitive, allow only alphanumeric characters and - , and must start with an alphabetic character. Leading whitespaces after name = , the remainder of the line after the first comment character # or ; , and trailing whitespaces of the line are discarded unless they are enclosed in double quotes. Internal whitespaces within the value are retained verbatim. Inside double quotes, double quote \" and backslash \\ characters must be escaped just like in a subsection, with \\\" and \\\\ , respectively. Values Values of many variables are treated as a simple string, but there are variables that take values of specific types and there are rules as to how to spell them. boolean When a variable is said to take a boolean value, many synonyms are accepted for true and false ; these are all case-insensitive. true : boolean true literals are yes , on , true , and 1 . Also, a variable defined without =<value> is taken as true . false : boolean false literals are no , off , false , 0 and the empty string. datetime Variables of this type are always parsed/written using ISO 8601 (or round-trip ) format. number The value for many variables that specify various sizes can be suffixed with k , M , G or T to mean \"scale the number by 1024\", \"by 1024x1024\", \"by 1024x1024x1024\" or \"by 1024x1024x1024x1024\" respectively. The suffix is case insensitive, and can also include the b , as in kb or MB . Note: if this section looks familiar, it's because it follows quite closely the git config documentation itself 😉 API PM> Install-Package dotnet-config-lib There is a CI feed in case you are working on a feature branch or a PR: <add key=\"kzu\" value=\"https://pkg.kzu.io/index.json\" /> The main usage for .NET tool authors consuming the dotnet-config-lib API is to first build a configuration from a specific path (will assume current directory if omitted): var config = Config.Build(); The resulting configuration will contain the hierarchical variables set in the current directory (or the given path), all its ancestor directories, plus global and system locations. When getting values, the supported primitives are exposed as first-class methods for Add , Get and Set , so you get quite a few usability overloads for each of Boolean , DateTime , Number and String , such as AddBoolean , GetDateTime , GetString or SetNumber : // reads from: // [mytool] // enabled = true bool? enabled = config.GetBoolean(\"mytool\", \"enabled\"); // reads from: // [mytool.editor] // path = code.exe string? path = config.GetString(\"mytool.editor\", \"path\"); // reads from: // [mytool \"src/file.txt\"] // createdOn = 2020-08-23T12:00:00Z DateTime? created = config.GetDateTime(\"mytool\", \"src/file.txt\", \"createdOn\"); // If value was not found, set it to the current datetime if (created == null) // Would create the section if it did not previously exist, and add the variable config.SetDateTime(\"mytool\", \"src/file.txt\", \"createdOn\", DateTime.Now); Alternatively you can use the TryGetXXX methods instead, to avoid checking for null return values in cases where the variable (in the requested section and optional subsection) is not found: if (!config.TryGetDateTime(\"mytool\", \"src/file.txt\", \"createdOn\", out created)) config.SetDateTime(\"mytool\", \"src/file.txt\", \"createdOn\", DateTime.Now); Since .netconfig supports multi-valued variables, you can retrieve them all ConfigEntry and inspect or manipulate them granularly: foreach (ConfigEntry entry in config.GetAll(\"proxy\", \"url\")) { // entry.Level allows inspecting the location where the entry was read from if (entry.Level == ConfigLevel.System) // entry came from Environment.SpecialFolder.System else if (entry.Level == ConfigLevel.Global) // entry came from Environment.SpecialFolder.UserProfile else // local entry from current dir .netconfig or an ancestor directory Console.WriteLine(entry.GetString()); // entry.GetBoolean(), entry.GetDateTime(), entry.GetNumber() } When writing values (via AddXXX or SetXXX ) you can optionally specify the configuration level to use for persisting the value, by passing a ConfigLevel : // writes on the global .netconfig in the user's profile //[vs \"alias\"] // comexp = run|community|exp config.AddString(\"vs\", \"alias\", \"comexp\", \"run|community|exp\", ConfigLevel.Global); You can explore the entire API in the docs site . CLI The command line tool allows you to inspect and modify configuration files used by your dotnet tools. Installation is the same as for any other dotnet tool: > dotnet tool install -g dotnet-config There is a CI feed in case you are working on a feature branch or a PR: > dotnet tool update -g dotnet-config --no-cache --add-source https://pkg.kzu.io/index.json Current output from dotnet config -? : Usage: dotnet config [options] Location (uses all locations by default) --local aggregate config file in current and ancestor directories --global use only global config file --system use only system config file -f, --file[=VALUE] use only given config file Action --get get value: name [value-regex] --get-all get all values: key [value-regex] --get-regexp get values for regexp: name-regex [value-regex] --set set value: name value [value-regex] --set-all replace all matching variables: name value [value_regex] --add add a new variable: name value --unset remove a variable: name [value-regex] --unset-all remove all matches: name [value-regex] --remove-section remove a section: name --rename-section rename section: old-name new-name -l, --list list all -e, --edit edit the config file in an editor Other --default[=VALUE] with --get, use default value when missing entry -d, --directory[=VALUE] use given directory for configuration file --name-only show variable names only --type[=VALUE] value is given this type, can be 'boolean', 'datetime' or 'number' -?, -h, --help Display this help Command line parsing is done with Mono.Options so all the following variants for arguments are supported: -flag , --flag , /flag , -flag=value , --flag=value , /flag=value , -flag:value , --flag:value , /flag:value , -flag value , --flag value , /flag value ."
  },
  "who/dotnet-file.html": {
    "href": "who/dotnet-file.html",
    "title": "dotnet-file | .netconfig",
    "keywords": "dotnet-file The dotnet-file is a dotnet global tool for downloading and updating loose files from arbitrary URLs. It uses dotnet-config to persist the remove URLs and the associated ETags for downloaded files so that performing a dotnet file update can only download the necessary changes (if any). Sample configuration: # dotnet-file GH repo download/sync for specific subfolders [file.github \"docs\"] url = https://github.com/dotnet/aspnetcore/tree/master/docs url = https://github.com/dotnet/runtime/tree/master/docs/design/features [file \"docs/APIReviewProcess.md\"] url = https://github.com/dotnet/aspnetcore/blob/master/docs/APIReviewProcess.md etag = 1e4acd7e1ac446f0c6d397e1ed517c54507700b85826f64745559dfb50f2acbd [file \"docs/Artifacts.md\"] url = https://github.com/dotnet/aspnetcore/blob/master/docs/Artifacts.md etag = d663b7b460e871c6af17fc288d8bd2d893e29127acf417030254dd239ef42a68 ... [file \"docs/design/features/tiered-compilation.md\"] url = https://github.com/dotnet/runtime/blob/master/docs/design/features/tiered-compilation.md etag = 8c2706b687ea4bdaac7ba4caccf29fa529856623e292195dda4aa506e39c3d7d [file \"docs/design/features/unloadability.md\"] url = https://github.com/dotnet/runtime/blob/master/docs/design/features/unloadability.md etag = 4424103e00e2fae42e6a6a8157d139de18026f2acd5d1afd6c727af03c5affeb"
  },
  "who/dotnet-vs.html": {
    "href": "who/dotnet-vs.html",
    "title": "dotnet-vs | .netconfig",
    "keywords": "dotnet-vs The dotnet-vs tool uses dotnet-config to persist command aliases, just like GIT aliases, that run Visual Studio (or its installer) with various switches. Any of the commands supported by the vs global tool can be saved as an alias by simply appending --save [alias] at the end of the command line arguments. Next time you need to execute the same command, you can just use vs [alias] instead. Example: Run Visual Studio Community edition's experimental instance, with activity logging enabled, save as test vs run com exp /log --save=test From that point on, the same command can be run simply with: vs test Sample configuration: [vs \"alias\"] comexp = run|community|exp preexp = run|preview|exp test = run|com|exp|/log"
  },
  "who/intro.html": {
    "href": "who/intro.html",
    "title": "Who uses .netconfig? | .netconfig",
    "keywords": "Who uses .netconfig? This section highlights some of the known usages of dotnet-config . If you created or use a tool that leverages dotnet-config , please consider sending a PR to add it to the who directory. In addition to a .md doc showcasing the usage, don't forget to add a corresponding entry to the toc.yml . Thanks!"
  }
}